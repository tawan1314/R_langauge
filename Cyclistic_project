install.packages("tidyverse")
install.packages("lubridate")
install.packages("ggplot2")
library(tidyverse)
library(lubridate)
library(readxl)
library(ggplot2)

getwd()
setwd("C:/Users/LENOVO/Desktop/2023-10-21/Coursera Data analyst/Course 8 Capstone/Project1/Datasets/1XLSX/Trip")

#Collect data
q1_2019 <- read_excel("Divvy_Trips_2019_Q1.xlsx")
q2_20190405 <- read_excel("Divvy_Trips_2019_Q2-04-05.xlsx")
q2_201906 <- read_excel("Divvy_Trips_2019_Q2-06.xlsx")
q3_201907 <- read_excel("Divvy_Trips_2019_Q3-07.xlsx")
q3_201908 <- read_excel("Divvy_Trips_2019_Q3-08.xlsx")
q3_201909 <- read_excel("Divvy_Trips_2019_Q3-09.xlsx")
q4_2019 <- read_excel("Divvy_Trips_2019_Q4.xlsx")

q2_2019 <- rbind(q2_20190405, q2_201906)
q3_2019 <- rbind(q3_201907, q3_201908, q3_201909)

#Wrangle data and Combine into a single file
colnames(q1_2019)
colnames(q2_2019)
colnames(q3_2019)
colnames(q4_2019)

q1_2019 <- rename(q1_2019,
                  ride_id = trip_id,
                  rideable_type = bikeid,
                  started_at = start_time,
                  ended_at = end_time,
                  start_station_name = from_station_name,
                  start_station_id = from_station_id,
                  end_station_name = to_station_name,
                  end_station_id = to_station_id,
                  member_casual = usertype)

q2_2019 <- rename(q2_2019,
                  ride_id = "01 - Rental Details Rental ID",
                  rideable_type = "01 - Rental Details Bike ID",
                  started_at = "01 - Rental Details Local Start Time",
                  ended_at = "01 - Rental Details Local End Time",
                  start_station_name = "03 - Rental Start Station Name",
                  start_station_id = "03 - Rental Start Station ID",
                  end_station_name = "02 - Rental End Station Name",
                  end_station_id = "02 - Rental End Station ID",
                  member_casual = "User Type",
                  birthyear = "05 - Member Details Member Birthday Year", 
                  gender = "Member Gender", 
                  tripduration = "01 - Rental Details Duration In Seconds Uncapped")

q3_2019 <- rename(q3_2019,
                  ride_id = trip_id,
                  rideable_type = bikeid,
                  started_at = start_time,
                  ended_at = end_time,
                  start_station_name = from_station_name,
                  start_station_id = from_station_id,
                  end_station_name = to_station_name,
                  end_station_id = to_station_id,
                  member_casual = usertype)

q4_2019 <- rename(q4_2019,
                  ride_id = trip_id,
                  rideable_type = bikeid,
                  started_at = start_time,
                  ended_at = end_time,
                  start_station_name = from_station_name,
                  start_station_id = from_station_id,
                  end_station_name = to_station_name,
                  end_station_id = to_station_id,
                  member_casual = usertype)

str(q1_2019)
str(q2_2019)
str(q3_2019)
str(q4_2019)

q1_2019 <- mutate(q1_2019, ride_id = as.character(ride_id),
                  rideable_type = as.character(rideable_type))
q2_2019 <- mutate(q2_2019, ride_id = as.character(ride_id),
                  rideable_type = as.character(rideable_type))
q3_2019 <- mutate(q3_2019, ride_id = as.character(ride_id),
                  rideable_type = as.character(rideable_type))
q4_2019 <- mutate(q4_2019, ride_id = as.character(ride_id),
                  rideable_type = as.character(rideable_type))

all_trips <- bind_rows(q1_2019, q2_2019, q3_2019, q4_2019)

all_trips <- all_trips %>% 
  select(-c(birthyear, gender, tripduration))

View(all_trips)
#Clean up and add data to prepare for analysis
colnames(all_trips)
nrow(all_trips)
ncol(all_trips)
dim(all_trips)
head(all_trips)
str(all_trips)
summary(all_trips)

head(all_trips$member_casual)

all_trips <- all_trips %>% 
  mutate(member_casual = recode(member_casual,
                                "Subscriber" = "member",
                                "Customer" = "casual"))

head(all_trips$member_casual)
table(all_trips$member_casual)

all_trips$date <- as.Date(all_trips$started_at)
all_trips$month <- format(as.Date(all_trips$date), "%m")
all_trips$day <- format(as.Date(all_trips$date), "%d")
all_trips$year <- format(as.Date(all_trips$date), "%Y")
all_trips$day_of_week <- format(as.Date(all_trips$date), "%A")

head(all_trips$day_of_week)

all_trips$ride_length <- difftime(all_trips$ended_at, all_trips$started_at)

head(all_trips$ride_length)
str(all_trips)

is.factor(all_trips$ride_length)
class(all_trips$ride_length)
all_trips$ride_length <- as.numeric(as.character(all_trips$ride_length))
is.numeric(all_trips$ride_length)

head(arrange(all_trips, ride_length))
all_trips_v2 <- all_trips[!(all_trips$ride_length<0),]
head(arrange(all_trips_v2, ride_length))

#Conduct descriptive analysis
mean(all_trips_v2$ride_length)
median(all_trips_v2$ride_length)
max(all_trips_v2$ride_length)
min(all_trips_v2$ride_length)
summary(all_trips_v2$ride_length)

setNames(aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual, FUN = mean),
              c("member_type", "ride_length_mean"))
setNames(aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual, FUN = median),
              c("member_type", "ride_length_median"))
setNames(aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual, FUN = max),
              c("member_type", "ride_length_max"))
setNames(aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual, FUN = min),
              c("member_type", "ride_length_min"))

setNames(aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual + 
            all_trips_v2$day_of_week, FUN = mean),
            c("member_type", "day_of_week", "ride_length_mean"))

all_trips_v2$day_of_week <- ordered(all_trips_v2$day_of_week, 
                                    levels = c("Sunday", "Monday",
                                               "Tuesday", "Wednesday",
                                               "Thursday", "Friday",
                                               "Saturday"))

setNames(aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual +
            all_trips_v2$day_of_week, FUN = mean),
         c("member_type", "day_of_week", "ride_length_mean"))

# analyze ridership data by type and weekday
all_trips_v2 %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>% 
  group_by(member_casual, weekday) %>% 
  summarise(number_of_rides = n(),
            average_duration = mean(ride_length)) %>% 
  arrange(member_casual, weekday)

# Visualize the number of rides by rider type
all_trips_v2 %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>% 
  group_by(member_casual, weekday) %>% 
  summarise(number_of_rides = n()/1000,
            average_duration = mean(ride_length)) %>% 
  arrange(member_casual, weekday) %>% 
  ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +
  geom_col(position = "dodge") +
  labs(title = "Number of Cyclistic riders per day in 2019",
       caption = "01-01-2019 to 12-31-2019")

ggsave("number of riders.png")

# Let's create a visualization for average duration
all_trips_v2 %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>% 
  group_by(member_casual, weekday) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(ride_length)) %>% 
  arrange(member_casual, weekday)  %>% 
  ggplot(aes(x = weekday, y = average_duration, fill = member_casual)) +
  geom_col(position = "dodge") +
  labs(title = "Average duration per day in 2019", 
       caption = "01-01-2019 to 12-31-2019")

ggsave("Average duration.png")

counts <- setNames(aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual +
                      all_trips_v2$day_of_week, FUN = mean),
                   c("member_type", "day_of_week", "ride_length_mean"))

View(counts)

#Export summary file for further analysis
write.csv(counts, file = 'C:/Users/LENOVO/Desktop/2023-10-21/Coursera Data analyst/Course 8 Capstone/Project1/Datasets/1XLSX/Trip/avg_ride_length.csv')
